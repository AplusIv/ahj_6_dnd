!function(){"use strict";class e{constructor(t){this.element=t,this.draggedElement=null,this.noteClosingElement=null,this.element.addEventListener("click",e.onOpenNote),this.element.addEventListener("click",e.OnAddTask),this.element.addEventListener("click",e.onCloseNote),this.noteOnMouseDown=this.noteOnMouseDown.bind(this),this.noteOnMouseMove=this.noteOnMouseMove.bind(this),this.element.addEventListener("mousemove",this.noteOnMouseMove),this.noteOnMouseUp=this.noteOnMouseUp.bind(this),this.element.addEventListener("mouseup",this.noteOnMouseUp),this.onMouseOver=this.onMouseOver.bind(this),this.element.addEventListener("mouseover",this.onMouseOver),this.onMouseOut=this.onMouseOut.bind(this),this.element.addEventListener("mouseout",this.onMouseOut)}static get markup(){return'\n    <div class="column">\n      <div class="column-data">\n        <div class="title" name="todo">todo</div>\n        <div class="content">\n          <div class="note-wrapper">\n            <div class="note">Научиться тайм-менеджменту</div>\n          </div>\n        </div>\n      </div>\n      <div class="add-note">\n        <button name="open-note-content" class="open-note-content" type="button">Add another card</button>\n        <div class="new-note-content hidden">\n          <textarea name="new-note" class="textarea-new" rows="5" placeholder="Введите текст новой заметки"\n            required></textarea>\n          <button name="add-button" class="add-button" type="button">Add card</button>\n        </div>\n      </div>\n    </div>\n    <div class="column">\n      <div class="column-data">\n        <div class="title" name="in progress">in progress</div>\n        <div class="content">\n          <div class="note-wrapper">\n            <div class="note">Выучиться на веб-разработчика</div>\n          </div>\n        </div>\n      </div>\n      <div class="add-note">\n        <button name="open-note-content" class="open-note-content" type="button">Add another card</button>\n        <div class="new-note-content hidden">\n          <textarea name="new-note" class="textarea-new" rows="5" placeholder="Введите текст новой заметки"\n            required></textarea>\n          <button name="add-button" class="add-button" type="button">Add card</button>\n        </div>\n      </div>\n    </div>\n    <div class="column">\n      <div class="column-data">\n        <div class="title" name="done">done</div>\n        <div class="content">\n          <div class="note-wrapper">\n            <div class="note">Помыть посуду</div>\n          </div>\n          <div class="note-wrapper">\n            <div class="note">Погулять</div>\n          </div>\n          <div class="note-wrapper">\n            <div class="note">Сходить в магазин</div>\n          </div>\n        </div>\n      </div>\n      <div class="add-note">\n        <button name="open-note-content" class="open-note-content" type="button">Add another card</button>\n        <div class="new-note-content hidden">\n          <textarea name="new-note" class="textarea-new" rows="5" placeholder="Введите текст новой заметки"\n            required></textarea>\n          <button name="add-button" class="add-button" type="button">Add card</button>\n        </div>\n      </div>        \n    </div>\n    '}static get closingElement(){const e=document.createElement("div");return e.classList.add("close","hidden"),e}bindToDom(){this.element.innerHTML=e.markup,this.noteClosingElement=e.closingElement,this.contents=this.element.querySelectorAll(".content"),this.contents.forEach((e=>{e.addEventListener("mousedown",this.noteOnMouseDown)}))}static onOpenNote(e){e.preventDefault(),e.target.classList.contains("open-note-content")&&(e.target.closest(".add-note").querySelector(".new-note-content").classList.toggle("hidden"),e.target.closest(".add-note").querySelector("textarea").focus(),e.target.classList.toggle("hidden"))}static OnAddTask(t){if(t.preventDefault(),t.target.classList.contains("add-button")){const n=t.target.parentElement.querySelector("textarea"),{value:s}=n;s&&(t.target.closest(".column").querySelector(".content").appendChild(e.newNote(s)),n.value="",t.target.closest(".add-note").querySelector(".open-note-content").classList.toggle("hidden"),t.target.parentElement.classList.toggle("hidden"))}}static newNote(e){const t=document.createElement("div");t.classList.add("note-wrapper");const n=document.createElement("div");return n.classList.add("note"),n.textContent=e,t.appendChild(n),t}onMouseOver(e){if(e.target.classList.contains("note")){e.target.dataset.closing="possible",this.showCLosingElement(e.target);const{width:t,height:n}=e.target.getBoundingClientRect();this.width=t,this.height=n}}onMouseOut(e){e.target.classList.contains("note")&&(e.relatedTarget.classList.contains("close")?this.showCLosingElement(e.target):(this.hideCLosingElement(),delete e.target.dataset.closing))}static onCloseNote(e){e.target.classList.contains("close")&&e.target.parentElement.remove()}showCLosingElement(e){e.closest(".note-wrapper").appendChild(this.noteClosingElement);const t=document.querySelector(".close");t.classList.remove("hidden"),e.parentElement.appendChild(t);const{right:n,top:s}=e.getBoundingClientRect();t.style.top=`${s+5}px`,t.style.left=n-20+"px"}hideCLosingElement(){document.querySelector(".close").remove(),this.noteClosingElement.classList.add("hidden")}noteOnMouseDown(t){t.preventDefault(),t.target.classList.contains("note")&&(this.draggedElement=t.target.closest(".note-wrapper"),this.draggedElement.classList.add("dragged"),this.shiftX=t.clientX-t.target.getBoundingClientRect().left,this.shiftY=t.clientY-t.target.getBoundingClientRect().top,this.draggedElement.style.width=`${this.width}px`,this.draggedElement.style.height=`${this.height}px`,this.proection=e.creatProection(this.draggedElement),document.documentElement.addEventListener("mouseup",this.noteOnMouseUp),document.documentElement.addEventListener("mousemove",this.noteOnMouseMove))}noteOnMouseMove(t){t.preventDefault(),this.draggedElement&&(this.draggedElement.style.width=`${this.width}px`,this.draggedElement.style.height=`${this.height}px`,this.draggedElement.style.top=t.clientY-this.shiftY+"px",this.draggedElement.style.left=t.clientX-this.shiftX+"px",e.definePlace(t,this.proection,t.target))}noteOnMouseUp(e){if(e.preventDefault(),this.draggedElement){const{y:t,height:n}=e.target.getBoundingClientRect(),s=t+n/2>e.clientY?"beforebegin":"afterend";e.target.classList.contains("note")&&e.target.parentElement.insertAdjacentElement(s,this.draggedElement),e.target.classList.contains("proection")&&e.target.insertAdjacentElement(s,this.draggedElement),e.target.classList.contains("column")&&e.target.querySelector(".content").appendChild(this.draggedElement),this.proection.remove(),this.proection=null,this.draggedElement.style.cssText='\n        cursor = "";\n        width = "";\n        height = "";\n        top = "";\n        left = "";\n      ',this.draggedElement.classList.remove("dragged"),this.draggedElement=void 0,document.documentElement.removeEventListener("mouseup",this.noteOnMouseUp),document.documentElement.removeEventListener("mouseover",this.noteOnMouseMove)}}static definePlace(e,t,n){if(n.classList.contains("note")){const{y:s,height:o}=e.target.getBoundingClientRect(),i=s+o/2>e.clientY?"beforebegin":"afterend";n.parentElement.insertAdjacentElement(i,t)}}static creatProection(e){return(()=>{const t=document.createElement("div");t.classList.add("proection");const{width:n,height:s}=window.getComputedStyle(e);return t.style.cssText=`\n\t \t\t\twidth: ${n};\n\t\t \t\theight: ${s};\n\t\t\t`,t})()}}const t=document.querySelector(".container");new e(t).bindToDom(),window.addEventListener("beforeunload",(()=>{document.querySelector(".close")&&document.querySelector(".close").remove();const e=[];document.querySelectorAll(".column").forEach((t=>{const n=t.querySelector(".title").textContent,s=t.querySelector(".content").innerHTML;e.push({[n]:s})})),localStorage.setItem("storageData",JSON.stringify(e))})),window.addEventListener("DOMContentLoaded",(()=>{if(localStorage.getItem("storageData")){const e=localStorage.getItem("storageData");let t;try{t=JSON.parse(e)}catch(e){console.log(e)}t.forEach((e=>{const t=Object.keys(e)[0],n=Object.values(e)[0];document.querySelector(`[name="${t}"]`).closest(".column").querySelector(".content").innerHTML=n}))}}))}();
//# sourceMappingURL=main.js.map